<?xml version='1.0' encoding='utf-8'?>
<fluidity_options>
  <simulation_name>
    <string_value lines="1">%(mesh)s</string_value>
  </simulation_name>
  <pyop2_backend>%(backend)s</pyop2_backend>
  <problem_type>
    <string_value lines="1">fluids</string_value>
  </problem_type>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="CoordinateMesh">
      <from_file file_name="%(mesh)s">
        <format name="triangle"/>
        <stat>
          <include_in_stat/>
        </stat>
      </from_file>
    </mesh>
    <mesh name="VelocityMesh">
      <from_mesh>
        <mesh name="CoordinateMesh"/>
        <stat>
          <exclude_from_stat/>
        </stat>
      </from_mesh>
    </mesh>
    <quadrature>
      <degree>
        <integer_value rank="0">4</integer_value>
      </degree>
    </quadrature>
  </geometry>
  <io>
    <dump_format>
      <string_value>vtk</string_value>
    </dump_format>
    <dump_period>
      <constant>
        <real_value rank="0">0.05</real_value>
      </constant>
    </dump_period>
    <disable_dump_at_start/>
    <disable_dump_at_end/>
    <output_mesh name="VelocityMesh"/>
    <stat/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">%(current_time)f</real_value>
    </current_time>
    <timestep>
      <real_value rank="0">%(dt)f</real_value>
    </timestep>
    <finish_time>
      <real_value rank="0">%(endtime)f</real_value>
    </finish_time>
  </timestepping>
  <material_phase name="Fluid">
    <vector_field name="Velocity" rank="1">
      <prescribed>
        <mesh name="VelocityMesh"/>
        <value name="WholeMesh">
          <constant>
            <real_value shape="2" dim1="dim" rank="1">1.0 0.0</real_value>
          </constant>
        </value>
        <output>
          <exclude_from_vtu/>
        </output>
        <stat>
          <exclude_from_stat/>
        </stat>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
      </prescribed>
    </vector_field>
    <scalar_field name="Tracer" rank="0">
      <prognostic>
        <mesh name="VelocityMesh"/>
        <equation name="UFL">
          <string_value lines="20" type="code" language="python">import cProfile
from pyop2.runtime_base import PYOP2_COMM
rank = PYOP2_COMM.Get_rank()
cProfile.run("""t=state.scalar_fields["Tracer"]
#u=state.vector_fields["Velocity"]
u=as_vector([1, 0])

p=TrialFunction(t)
q=TestFunction(t)

diffusivity = %(diffusivity)f

M=p*q*dx

adv_rhs = (q*t+dt*dot(grad(q),u)*t)*dx

d=-dt*diffusivity*dot(grad(q),grad(p))*dx

D=M-0.5*d
diff_rhs=action(M+0.5*d,t)

solve(M == adv_rhs, t)
solve(D == diff_rhs, t)""", 'ufl_advection_diffusion.%(backend)s.'+str(time)+'.'+str(rank)+'.cprofile.part')</string_value>
        </equation>
        <spatial_discretisation>
          <continuous_galerkin>
            <stabilisation>
              <no_stabilisation/>
            </stabilisation>
            <advection_terms/>
            <mass_terms/>
          </continuous_galerkin>
          <conservative_advection>
            <real_value rank="0">1</real_value>
          </conservative_advection>
        </spatial_discretisation>
        <temporal_discretisation>
          <theta>
            <real_value rank="0">0.5</real_value>
          </theta>
        </temporal_discretisation>
        <solver>
          <iterative_method name="cg"/>
          <preconditioner name="jacobi"/>
          <relative_error>
            <real_value rank="0">1.0e-7</real_value>
          </relative_error>
          <max_iterations>
            <integer_value rank="0">1000</integer_value>
          </max_iterations>
          <never_ignore_solver_failures/>
          <diagnostics>
            <monitors/>
          </diagnostics>
        </solver>
        <initial_condition name="WholeMesh">
          <python>
            <string_value lines="20" type="code" language="python">from analytical_solution import advection_diffusion as val</string_value>
          </python>
        </initial_condition>
        <output>
          <exclude_from_vtu/>
        </output>
        <stat>
          <exclude_from_stat/>
        </stat>
        <convergence>
          <exclude_from_convergence/>
        </convergence>
        <detectors>
          <exclude_from_detectors/>
        </detectors>
        <steady_state>
          <include_in_steady_state/>
        </steady_state>
        <consistent_interpolation/>
      </prognostic>
    </scalar_field>
  </material_phase>
</fluidity_options>
